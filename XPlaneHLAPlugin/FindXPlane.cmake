# Set the default XPLANE_ROOT value
IF(NOT XPLANE_ROOT)
    SET(XPLANE_ROOT $ENV{XPLANE_ROOT} CACHE PATH "The X-Plane directory root.")
ENDIF(NOT XPLANE_ROOT)

MACRO(MESSAGE_QUIETLY QUIET TYPE MSG)
   IF(NOT ${QUIET})
       MESSAGE(${TYPE} "${MSG}")
   ENDIF(NOT ${QUIET})
ENDMACRO(MESSAGE_QUIETLY QUIET TYPE MSG)

# Look for X-Plane executable
FIND_PROGRAM(XPLANE_EXECUTABLE
    NAMES X-Plane.exe
    PATHS
        ${XPLANE_ROOT}
    PATH_SUFFIXES 
    DOC "X-Plane Software")
	
IF (XPLANE_EXECUTABLE)
  IF (NOT XPLANE_FIND_QUIETLY) 
      MESSAGE_QUIETLY(XPLANE_FIND_QUIETLY STATUS "Looking for XPlane... - XPlane is ${XPLANE_EXECUTABLE}")
  ENDIF(NOT XPLANE_FIND_QUIETLY) 
  SET(XPLANE_EXECUTABLE_FOUND "YES")
  GET_FILENAME_COMPONENT(XPLANE_EXECUTABLE_DIRECTORY ${XPLANE_EXECUTABLE} PATH)
  SET(XPLANE_PLUGINS_DIRECTORY ${XPLANE_EXECUTABLE_DIRECTORY}\\Resources\\plugins)
ELSE (XPLANE_EXECUTABLE) 
  SET(XPLANE_EXECUTABLE_FOUND "NO")
  IF (NOT XPLANE_FIND_QUIETLY) 
      MESSAGE_QUIETLY(XPLANE_FIND_QUIETLY STATUS "Looking for XPlane... - XPlane NOT FOUND")
  ENDIF(NOT XPLANE_FIND_QUIETLY)
ENDIF (XPLANE_EXECUTABLE) 

# Look for SDK libraries and header files
FIND_LIBRARY(XPLANE_XPLM_LIBRARY
    NAMES XPLM
    PATHS
        ${XPLANE_ROOT}/SDK/Libraries/Win
    PATH_SUFFIXES lib
    DOC "The X-Plane Library")

FIND_PATH(XPLANE_XPLM_INCLUDE_DIR
    NAMES XPLMPlugin.h
    PATHS
        ${XPLANE_ROOT}/SDK/CHeaders/XPLM
    DOC "The XPLANE_XPLM Include Directory")

FIND_LIBRARY(XPLANE_XPW_LIBRARY
    NAMES XPWidgets
    PATHS
        ${XPLANE_ROOT}/SDK/Libraries/Win
    PATH_SUFFIXES lib
    DOC "The X-Plane Library")

FIND_PATH(XPLANE_XPW_INCLUDE_DIR
    NAMES XPWidgets.h
    PATHS
        ${XPLANE_ROOT}/SDK/CHeaders/Widgets
    DOC "The XPLANE_XPW Include Directory")

INCLUDE(FindPackageHandleStandardArgs)
FIND_PACKAGE_HANDLE_STANDARD_ARGS(X-Plane DEFAULT_MSG
    XPLANE_EXECUTABLE
    XPLANE_XPLM_LIBRARY XPLANE_XPLM_INCLUDE_DIR
    XPLANE_XPW_LIBRARY XPLANE_XPW_INCLUDE_DIR)

LIST(APPEND XPLANE_LIBRARIES ${XPLANE_XPLM_LIBRARY} ${XPLANE_XPW_LIBRARY})
